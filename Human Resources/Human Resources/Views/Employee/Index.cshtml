@model FilterVM
@using Human_Resources.Data.Enum
@using Human_Resources.Data.ViewModels
@using X.PagedList.Mvc.Core;
@using X.PagedList.Web.Common;
@using X.PagedList;
@{
    ViewData["title"] = "Available Employees";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@if (Model.Employees.Count > 0)
{
    <form asp-action="Index">
        <div class="form-group mb-3">
            <label asp-for="State" class="control-label"></label>
            <select asp-for="State" class="form-control" asp-items="Html.GetEnumSelectList<State>()">
            </select>
            <span asp-validation-for="State" class="text-danger"></span>
        </div>
        <div class="form-group mb-3">
            <input type="submit" class="btn btn-success">
        </div>
        
    </form>
    <table class="table bg-white">
        <tr>
            <th style="padding-left: 30px;">Employee Name</th>
        </tr>
        @foreach (var emp in Model.Employees)
        {
            <tr>
                <td class="align-middle" style="padding-left: 30px;">
                    @emp.Name
                </td>
                <td class="align-middle" style="padding-left: 30px;">
                    <a class="btn btn-outline-primary" asp-action="EditEmployee" asp-route-Id="@emp.Id"><i class="bi bi-pencil-square"></i>Edit</a> |
                    <a class="btn btn-outline-info" asp-route-Id="@emp.Id" asp-action="Details"><i class="bi bi-eye"></i>Details</a> |
                    @if(emp.State != State.Inactive)
                    {
                        <a class="btn btn-danger text-white" asp-action="Deactivate" asp-route-Id="@emp.Id"><i class="bi bi-trash"></i>Deactivate</a>
                    }
                </td>
            </tr>
        }
        <a class="btn btn-primary" asp-action="AddEmployee">Add an Employee</a>
    </table>
    @*@await Html.PartialAsync("~/Views/Shared/_LoginData.cshtml")*@
    <nav>
    @Html.PagedListPager(Model.Employees, page => Url.Action("index", new { page = page }), new PagedListRenderOptions()
    {
    ActiveLiElementClass = "active",
    PageClasses = new[]{ "page-link"},
    LiElementClasses=new[] { "page-item" },
    UlElementClasses = new[] { "pagination","justify-content-center", "mt-3" },
    LinkToNextPageFormat = "Next",
    LinkToPreviousPageFormat = "Previous",
    MaximumPageNumbersToDisplay = 5,
    DisplayLinkToPreviousPage = PagedListDisplayMode.Always,
    DisplayLinkToNextPage = PagedListDisplayMode.Always
    })
    </nav>
}
else
{
    <h4 class="text-danger align-content-center">No Employees available</h4>
    <a asp-action="AddEmployee" class="btn btn-primary" >Add an Employee</a>
}
@section Scripts{
    <script src="~/lib/jquery/dist/jquery.min.js"></script>
    <script src="~/lib/jquery-validation/dist/jquery.validate.min.js"></script>
    <script src="~/lib/jquery-validation-unobtrusive/jquery.validate.unobtrusive.min.js"></script>
    <partial name="_ValidationScriptsPartial" />
}



